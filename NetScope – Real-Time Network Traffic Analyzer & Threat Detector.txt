Last login: Tue Oct 28 12:06:02 on ttys000

The default interactive shell is now zsh.
To update your account to use zsh, please run `chsh -s /bin/zsh`.
For more details, please visit https://support.apple.com/kb/HT208050.
TOCHE-LONDON:~ test123$ mkdir ~/netscope && cd ~/netscope && git init && python3 -m venv .venv && source .venv/bin/activate && pip install --upgrade pip && pip install scapy pandas matplotlib && echo "project: NetScope" > README.md
Initialized empty Git repository in /Users/test123/netscope/.git/
Requirement already satisfied: pip in ./.venv/lib/python3.9/site-packages (21.2.4)
Collecting pip
  Using cached pip-25.3-py3-none-any.whl (1.8 MB)
Installing collected packages: pip
  Attempting uninstall: pip
    Found existing installation: pip 21.2.4
    Uninstalling pip-21.2.4:
      Successfully uninstalled pip-21.2.4
Successfully installed pip-25.3
Collecting scapy
  Downloading scapy-2.6.1-py3-none-any.whl.metadata (5.6 kB)
Collecting pandas
  Using cached pandas-2.3.3-cp39-cp39-macosx_10_9_x86_64.whl.metadata (91 kB)
Collecting matplotlib
  Downloading matplotlib-3.9.4-cp39-cp39-macosx_10_12_x86_64.whl.metadata (11 kB)
Collecting numpy>=1.22.4 (from pandas)
  Downloading numpy-2.0.2-cp39-cp39-macosx_10_9_x86_64.whl.metadata (60 kB)
Collecting python-dateutil>=2.8.2 (from pandas)
  Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl.metadata (8.4 kB)
Collecting pytz>=2020.1 (from pandas)
  Downloading pytz-2025.2-py2.py3-none-any.whl.metadata (22 kB)
Collecting tzdata>=2022.7 (from pandas)
  Downloading tzdata-2025.2-py2.py3-none-any.whl.metadata (1.4 kB)
Collecting contourpy>=1.0.1 (from matplotlib)
  Downloading contourpy-1.3.0-cp39-cp39-macosx_10_9_x86_64.whl.metadata (5.4 kB)
Collecting cycler>=0.10 (from matplotlib)
  Downloading cycler-0.12.1-py3-none-any.whl.metadata (3.8 kB)
Collecting fonttools>=4.22.0 (from matplotlib)
  Downloading fonttools-4.60.1-cp39-cp39-macosx_10_9_x86_64.whl.metadata (112 kB)
Collecting kiwisolver>=1.3.1 (from matplotlib)
  Downloading kiwisolver-1.4.7-cp39-cp39-macosx_10_9_x86_64.whl.metadata (6.3 kB)
Collecting packaging>=20.0 (from matplotlib)
  Using cached packaging-25.0-py3-none-any.whl.metadata (3.3 kB)
Collecting pillow>=8 (from matplotlib)
  Downloading pillow-11.3.0-cp39-cp39-macosx_10_10_x86_64.whl.metadata (9.0 kB)
Collecting pyparsing>=2.3.1 (from matplotlib)
  Downloading pyparsing-3.2.5-py3-none-any.whl.metadata (5.0 kB)
Collecting importlib-resources>=3.2.0 (from matplotlib)
  Downloading importlib_resources-6.5.2-py3-none-any.whl.metadata (3.9 kB)
Collecting zipp>=3.1.0 (from importlib-resources>=3.2.0->matplotlib)
  Downloading zipp-3.23.0-py3-none-any.whl.metadata (3.6 kB)
Collecting six>=1.5 (from python-dateutil>=2.8.2->pandas)
  Downloading six-1.17.0-py2.py3-none-any.whl.metadata (1.7 kB)
Downloading scapy-2.6.1-py3-none-any.whl (2.4 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.4/2.4 MB 10.9 MB/s  0:00:00
Downloading pandas-2.3.3-cp39-cp39-macosx_10_9_x86_64.whl (11.6 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 11.6/11.6 MB 7.5 MB/s  0:00:01
Downloading matplotlib-3.9.4-cp39-cp39-macosx_10_12_x86_64.whl (7.9 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 7.9/7.9 MB 14.7 MB/s  0:00:00
Downloading contourpy-1.3.0-cp39-cp39-macosx_10_9_x86_64.whl (265 kB)
Downloading cycler-0.12.1-py3-none-any.whl (8.3 kB)
Downloading fonttools-4.60.1-cp39-cp39-macosx_10_9_x86_64.whl (2.3 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 2.3/2.3 MB 12.2 MB/s  0:00:00
Downloading importlib_resources-6.5.2-py3-none-any.whl (37 kB)
Downloading kiwisolver-1.4.7-cp39-cp39-macosx_10_9_x86_64.whl (65 kB)
Downloading numpy-2.0.2-cp39-cp39-macosx_10_9_x86_64.whl (21.2 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 21.2/21.2 MB 6.9 MB/s  0:00:03
Using cached packaging-25.0-py3-none-any.whl (66 kB)
Downloading pillow-11.3.0-cp39-cp39-macosx_10_10_x86_64.whl (5.3 MB)
   ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━ 5.3/5.3 MB 7.9 MB/s  0:00:00
Downloading pyparsing-3.2.5-py3-none-any.whl (113 kB)
Downloading python_dateutil-2.9.0.post0-py2.py3-none-any.whl (229 kB)
Downloading pytz-2025.2-py2.py3-none-any.whl (509 kB)
Downloading six-1.17.0-py2.py3-none-any.whl (11 kB)
Downloading tzdata-2025.2-py2.py3-none-any.whl (347 kB)
Downloading zipp-3.23.0-py3-none-any.whl (10 kB)
Installing collected packages: pytz, zipp, tzdata, six, scapy, pyparsing, pillow, packaging, numpy, kiwisolver, fonttools, cycler, python-dateutil, importlib-resources, contourpy, pandas, matplotlib
Successfully installed contourpy-1.3.0 cycler-0.12.1 fonttools-4.60.1 importlib-resources-6.5.2 kiwisolver-1.4.7 matplotlib-3.9.4 numpy-2.0.2 packaging-25.0 pandas-2.3.3 pillow-11.3.0 pyparsing-3.2.5 python-dateutil-2.9.0.post0 pytz-2025.2 scapy-2.6.1 six-1.17.0 tzdata-2025.2 zipp-3.23.0
(.venv) TOCHE-LONDON:netscope test123$ sudo tcpdump -i en0 -w traffic.pcap -c 500
Password:
tcpdump: listening on en0, link-type EN10MB (Ethernet), snapshot length 524288 bytes
500 packets captured
658 packets received by filter
0 packets dropped by kernel
(.venv) TOCHE-LONDON:netscope test123$ ls -lh traffic.pcap
-rw-r--r--  1 root  staff   220K 29 Oct 12:09 traffic.pcap
(.venv) TOCHE-LONDON:netscope test123$ cat > netscope.py <<'PY'
> #!/usr/bin/env python3
> from scapy.all import rdpcap, IP, TCP, UDP, ICMP
> import pandas as pd
> import matplotlib.pyplot as plt
> import sys
> 
> pcap_file = "traffic.pcap"
> try:
>     packets = rdpcap(pcap_file)
> except FileNotFoundError:
>     print(f"ERROR: {pcap_file} not found"); sys.exit(1)
> 
> rows = []
> for pkt in packets:
>     ts = getattr(pkt, "time", None)
>     src = pkt[IP].src if IP in pkt else None
>     dst = pkt[IP].dst if IP in pkt else None
>     proto = "OTHER"
>     sport = None
>     dport = None
>     length = len(pkt)
>     if TCP in pkt:
>         proto = "TCP"
>         sport = pkt[TCP].sport
>         dport = pkt[TCP].dport
>     elif UDP in pkt:
>         proto = "UDP"
>         sport = pkt[UDP].sport
>         dport = pkt[UDP].dport
>     elif ICMP in pkt:
>         proto = "ICMP"
>     rows.append({
>         "timestamp": ts,
>         "src": src,
>         "dst": dst,
>         "protocol": proto,
>         "sport": sport,
>         "dport": dport,
>         "length": length
>     })
> 
> df = pd.DataFrame(rows)
> df.to_csv("report.csv", index=False)
> 
> # Summaries
> top_src = df['src'].value_counts().head(10)
> top_dst = df['dst'].value_counts().head(10)
> prot_counts = df['protocol'].value_counts()
> 
> print(f"Loaded {len(df)} packets from {pcap_file}")
> print("\nTop 8 source IPs:")
> print(top_src.head(8).to_string())
> print("\nTop 8 destination IPs:")
> print(top_dst.head(8).to_string())
> print("\nProtocols:")
> print(prot_counts.to_string())
> 
> # Save simple plots
> if not df.empty:
>     try:
>         top_src.plot.bar(title='Top Source IPs', ylabel='Packet Count', xlabel='Source IP')
>         plt.tight_layout()
>         plt.savefig("top_ips.png")
>         plt.clf()
> 
>         prot_counts.plot.pie(autopct='%1.1f%%', title='Protocols (by count)')
>         plt.ylabel('')
>         plt.tight_layout()
>         plt.savefig("protocols.png")
>         plt.clf()
>     except Exception as e:
>         print("Warning: failed to create plots:", e)
> 
> print("\nOutputs generated: report.csv, top_ips.png, protocols.png (if plotting succeeded).")
> PY
(.venv) TOCHE-LONDON:netscope test123$ 
(.venv) TOCHE-LONDON:netscope test123$ python3 netscope.py
                
Matplotlib is building the font cache; this may take a moment.
Loaded 500 packets from traffic.pcap

Top 8 source IPs:
src
192.168.0.97      23
192.168.0.1       15
57.128.141.163     8
192.168.0.166      3

Top 8 destination IPs:
dst
192.168.0.97      23
192.168.0.1       15
57.128.141.163     8
224.0.0.251        3

Protocols:
protocol
UDP      327
TCP      125
OTHER     48

Outputs generated: report.csv, top_ips.png, protocols.png (if plotting succeeded).
(.venv) TOCHE-LONDON:netscope test123$ 
(.venv) TOCHE-LONDON:netscope test123$ cat > threatscan.py <<'PY'
> #!/usr/bin/env python3
> import pandas as pd
> import re
> 
> df = pd.read_csv("report.csv")
> print(f"Loaded {len(df)} packets for threat scan.\n")
> 
> # Example threat rules
> suspicious_ports = [23, 2323, 3389, 22, 8080, 4444]
> private_ip_pattern = re.compile(r"^192\.168|10\.|172\.(1[6-9]|2\d|3[01])")
> 
> alerts = []
> 
> for _, row in df.iterrows():
>     src, dst, proto, sport, dport = row["src"], row["dst"], row["protocol"], row["sport"], row["dport"]
> 
>     # Detect external (non-private) source IP
>     if src and not private_ip_pattern.search(str(src)):
>         alerts.append(f"External source detected → {src}")
> 
>     # Detect suspicious port
>     if dport in suspicious_ports or sport in suspicious_ports:
>         alerts.append(f"Suspicious port usage ({sport}->{dport}) in {proto} traffic")
> 
>     # Detect null protocol entries
>     if proto == "OTHER":
>         alerts.append(f"Unclassified protocol packet from {src} to {dst}")
> 
> alerts = list(set(alerts))
> print("=== Threat Scan Summary ===")
> print(f"Unique Alerts Found: {len(alerts)}")
> for a in alerts[:10]:
>     print("•", a)
> 
> with open("threat_report.txt", "w") as f:
>     f.write("\n".join(alerts))
> 
> print("\nThreat report saved → threat_report.txt")
> PY
(.venv) TOCHE-LONDON:netscope test123$ 
(.venv) TOCHE-LONDON:netscope test123$ python3 threatscan.py
Loaded 500 packets for threat scan.

=== Threat Scan Summary ===
Unique Alerts Found: 3
• Unclassified protocol packet from nan to nan
• External source detected → nan
• External source detected → 57.128.141.163

Threat report saved → threat_report.txt
(.venv) TOCHE-LONDON:netscope test123$ cat > netscope_report.py <<'PY'
> #!/usr/bin/env python3
> from fpdf import FPDF
> import os
> 
> pdf = FPDF()
> pdf.add_page()
> pdf.set_font("Arial", "B", 16)
> pdf.cell(200, 10, "NetScope - Network Traffic & Threat Report", ln=True, align="C")
> 
> pdf.set_font("Arial", "", 12)
> pdf.cell(200, 10, "", ln=True)
> pdf.multi_cell(0, 10, """This report summarizes network activity captured and analyzed using NetScope. 
> The analysis includes protocol distribution, top source and destination IPs, and a rule-based threat scan.""")
> pdf.cell(200, 10, "", ln=True)
> 
> if os.path.exists("top_ips.png"):
>     pdf.image("top_ips.png", x=10, w=180)
> if os.path.exists("protocols.png"):
>     pdf.image("protocols.png", x=10, w=180)
> 
> pdf.add_page()
> pdf.set_font("Arial", "B", 14)
> pdf.cell(0, 10, "Threat Scan Summary", ln=True)
> pdf.set_font("Arial", "", 12)
> 
> if os.path.exists("threat_report.txt"):
>     with open("threat_report.txt") as f:
>         threats = f.readlines()
>     if threats:
>         for line in threats:
>             pdf.multi_cell(0, 8, f"- {line.strip()}")
>     else:
>         pdf.multi_cell(0, 8, "No suspicious activity detected.")
> else:
>     pdf.multi_cell(0, 8, "No threat report available.")
> 
> pdf.output("NetScope_Report.pdf")
> print("✅ PDF report created → NetScope_Report.pdf")
> PY
(.venv) TOCHE-LONDON:netscope test123$ 
(.venv) TOCHE-LONDON:netscope test123$ pip install fpdf
Collecting fpdf
  Downloading fpdf-1.7.2.tar.gz (39 kB)
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Preparing metadata (pyproject.toml) ... done
Building wheels for collected packages: fpdf
  Building wheel for fpdf (pyproject.toml) ... done
  Created wheel for fpdf: filename=fpdf-1.7.2-py2.py3-none-any.whl size=40758 sha256=ce4975b9eee97dd8dc540456641b67a89977be0467961695be326d2fa0012cb4
  Stored in directory: /Users/test123/Library/Caches/pip/wheels/44/35/8b/86ce00cec7e4d13c5f189680ae0fa82f919bedc066c2cddae9
Successfully built fpdf
Installing collected packages: fpdf
Successfully installed fpdf-1.7.2
(.venv) TOCHE-LONDON:netscope test123$ python3 netscope_report.py
Traceback (most recent call last):
  File "/Users/test123/netscope/netscope_report.py", line 37, in <module>
    pdf.output("NetScope_Report.pdf")
  File "/Users/test123/netscope/.venv/lib/python3.9/site-packages/fpdf/fpdf.py", line 1065, in output
    self.close()
  File "/Users/test123/netscope/.venv/lib/python3.9/site-packages/fpdf/fpdf.py", line 246, in close
    self._enddoc()
  File "/Users/test123/netscope/.venv/lib/python3.9/site-packages/fpdf/fpdf.py", line 1636, in _enddoc
    self._putpages()
  File "/Users/test123/netscope/.venv/lib/python3.9/site-packages/fpdf/fpdf.py", line 1170, in _putpages
    p = self.pages[n].encode("latin1") if PY3K else self.pages[n] 
UnicodeEncodeError: 'latin-1' codec can't encode character '\u2192' in position 236: ordinal not in range(256)
(.venv) TOCHE-LONDON:netscope test123$ cat > netscope_report.py <<'PY'
> #!/usr/bin/env python3
> from fpdf import FPDF
> import os
> 
> pdf = FPDF()
> pdf.add_page()
> pdf.set_font("Arial", "B", 16)
> pdf.cell(200, 10, "NetScope - Network Traffic & Threat Report", ln=True, align="C")
> 
> pdf.set_font("Arial", "", 12)
> pdf.cell(200, 10, "", ln=True)
> pdf.multi_cell(0, 10, """This report summarizes network activity captured and analyzed using NetScope. 
> The analysis includes protocol distribution, top source and destination IPs, and a rule-based threat scan.""")
> 
> pdf.cell(200, 10, "", ln=True)
> 
> if os.path.exists("top_ips.png"):
>     pdf.image("top_ips.png", x=10, w=180)
> if os.path.exists("protocols.png"):
>     pdf.image("protocols.png", x=10, w=180)
> 
> pdf.add_page()
> pdf.set_font("Arial", "B", 14)
> pdf.cell(0, 10, "Threat Scan Summary", ln=True)
> pdf.set_font("Arial", "", 12)
> 
> if os.path.exists("threat_report.txt"):
>     with open("threat_report.txt") as f:
>         threats = f.readlines()
>     if threats:
>         for line in threats:
>             clean = line.replace("→", "->").strip()
>             pdf.multi_cell(0, 8, f"- {clean}")
>     else:
>         pdf.multi_cell(0, 8, "No suspicious activity detected.")
> else:
>     pdf.multi_cell(0, 8, "No threat report available.")
> 
> pdf.output("NetScope_Report.pdf", "F")
> print("✅ PDF report created → NetScope_Report.pdf")
> PY
(.venv) TOCHE-LONDON:netscope test123$ 
(.venv) TOCHE-LONDON:netscope test123$ python3 netscope_report.py
✅ PDF report created → NetScope_Report.pdf
(.venv) TOCHE-LONDON:netscope test123$ ls -lh NetScope_Report.pdf
-rw-r--r--  1 test123  staff    38K 29 Oct 12:16 NetScope_Report.pdf
(.venv) TOCHE-LONDON:netscope test123$ 
